{"version":3,"sources":["components/NewItemTodo/index.js","components/NewItemTodo/NewItemTodo.jsx","components/TodoList/TodoListItem/index.js","components/TodoList/TodoListItem/TodoListItem.jsx","components/TodoList/index.js","components/TodoList/TodoList.jsx","components/Footer/Filters/FilterItem.jsx","components/Footer/Filters/index.js","components/Footer/Filters/Filters.jsx","components/Footer/index.js","components/Footer/Footer.jsx","components/App/index.js","components/App/App.jsx","index.js"],"names":["NewItemTodo","_ref","onAdd","createElement","e","keyCode","target","value","obj","id","Date","now","text","isComplete","react_default","a","className","onBlur","onKeyDown","placeholder","TodoListItem","state","isEdit","handleInputClick","_this$props","_this","props","onToggle","handleBtnDestroyClick","_this$props2","onRemove","handleLabelDblClick","setState","handleKeyDown","handleNewInputEdit","handleOnBlur","_this$props3","onEdit","_this$props4","this","type","checked","onClick","autoFocus","defaultValue","onDoubleClick","Component","TodoList","items","elements","map","item","TodoList_TodoListItem","Object","assign","key","FilterItem","isCurrent","filterName","filterLabel","onChangeFilter","defaultChecked","name","htmlFor","Filters","selectedFilter","label","_ref2","Filters_FilterItem","Footer","total","active","completed","onHandleClearCompletedClick","concat","Footer_Filters","hidden","App","arrayTodo","JSON","parse","localStorage","getItem","filter","handleAddElement","toConsumableArray","handleEditElement","el","objectSpread","handleRemoveElement","removeIndex","findIndex","slice","handleToggleElement","changeIndex","updatedObj","saveToStorage","str","stringify","setItem","handleChangeFilter","getFilter","handleClearCompletedClick","handleToggleAllClick","_this$state","length","filterItems","components_NewItemTodo","components_TodoList","components_Footer","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.9b662f00.chunk.js","sourcesContent":["import NewItemTodo from \"./NewItemTodo\";\r\n\r\nexport default NewItemTodo;\r\n","import React from 'react';\r\nimport './NewItemTodo.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NewItemTodo = ({\r\n  onAdd,\r\n}) => {\r\n  const createElement = (e) => {\r\n    if (!e.keyCode || e.keyCode === 13) {\r\n      if (e.target.value !== '') {\r\n        const obj = { id: Date.now(), text: e.target.value, isComplete: false };\r\n        onAdd(obj);\r\n        e.target.value = '';\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    createElement(e);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    createElement(e);\r\n  };\r\n\r\n\r\n  return (\r\n    <input\r\n      className=\"header__new-item\"\r\n      onBlur={handleBlur}\r\n      onKeyDown={handleKeyDown}\r\n      placeholder=\"What needs to be done?\"\r\n    />\r\n  );\r\n};\r\n\r\nNewItemTodo.propTypes = {\r\n  onAdd: PropTypes.func.isRequired,\r\n};\r\nexport default NewItemTodo;\r\n","import TodoListItem from './TodoListItem';\r\n\r\nexport default TodoListItem;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TodoListItem.css';\r\n\r\n\r\nexport default class TodoListItem extends Component {\r\n  state = { isEdit: false };\r\n\r\n  handleInputClick = () => {\r\n    const { id, isComplete, onToggle } = this.props;\r\n    onToggle(id, isComplete);\r\n  };\r\n\r\n  handleBtnDestroyClick = () => {\r\n    const { id, onRemove } = this.props;\r\n    onRemove(id);\r\n  };\r\n\r\n  handleLabelDblClick = () => {\r\n    this.setState({ isEdit: true });\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    this.handleNewInputEdit(e);\r\n  };\r\n\r\n  handleOnBlur = (e) => {\r\n    this.handleNewInputEdit(e);\r\n  };\r\n\r\n  handleNewInputEdit = (e) => {\r\n    const { id, onEdit, onRemove } = this.props;\r\n    let { text } = this.props;\r\n    if (!e.keyCode || e.keyCode === 13) {\r\n      if (e.target.value !== '') {\r\n        text = e.target.value;\r\n        onEdit(id, text);\r\n        this.setState({ isEdit: false });\r\n      } else {\r\n        onRemove(id);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text, isComplete } = this.props;\r\n    const { isEdit } = this.state;\r\n    return (\r\n      <li className=\"item\">\r\n        <div className=\"content-wrap\">\r\n          <input\r\n            className=\"complete\"\r\n            type=\"checkbox\"\r\n            checked={isComplete}\r\n            onClick={this.handleInputClick}\r\n          />\r\n          {isEdit ? (\r\n            <input\r\n              className=\"edit\"\r\n            // eslint-disable-next-line jsx-a11y/no-autofocus\r\n              autoFocus\r\n              onBlur={this.handleOnBlur}\r\n              onKeyDown={this.handleKeyDown}\r\n              defaultValue={text}\r\n            />\r\n          ) : (\r\n          // eslint-disable-next-line jsx-a11y/label-has-associated-control\r\n            <label className=\"caption\" onDoubleClick={this.handleLabelDblClick}>\r\n              {text}\r\n            </label>\r\n          )}\r\n          <button\r\n            className=\"destroy\"\r\n            type=\"submit\"\r\n            onClick={this.handleBtnDestroyClick}\r\n          />\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nTodoListItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  isComplete: PropTypes.bool.isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n","import TodoList from './TodoList';\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoListItem from './TodoListItem/index';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = ({\r\n  items,\r\n  onToggle,\r\n  onRemove,\r\n  onEdit,\r\n}) => {\r\n  const elements = items.map(item => (\r\n    <TodoListItem\r\n      key={item.id}\r\n      {...item}\r\n      onToggle={onToggle}\r\n      onRemove={onRemove}\r\n      onEdit={onEdit}\r\n    />\r\n\r\n  ));\r\n  return <ul className=\"todo-list\">{elements}</ul>;\r\n};\r\nexport default TodoList;\r\n\r\nTodoList.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FilterItem = ({\r\n  isCurrent,\r\n  filterName,\r\n  filterLabel,\r\n  onChangeFilter,\r\n}) => {\r\n  const handleClick = (e) => {\r\n    onChangeFilter(e.target.id);\r\n  };\r\n\r\n  return (\r\n    <li className=\"filters__item\">\r\n      <input\r\n        className=\"filter\"\r\n        defaultChecked={isCurrent}\r\n        type=\"radio\"\r\n        name=\"group\"\r\n        id={filterName}\r\n        onClick={handleClick}\r\n      />\r\n      <label\r\n        htmlFor={filterName}\r\n        className={filterName}\r\n      >\r\n        {filterLabel}\r\n      </label>\r\n    </li>\r\n  );\r\n};\r\n\r\nFilterItem.propTypes = {\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n  isCurrent: PropTypes.bool.isRequired,\r\n  filterName: PropTypes.string.isRequired,\r\n  filterLabel: PropTypes.string.isRequired,\r\n};\r\nexport default FilterItem;\r\n","import Filters from './Filters';\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FilterItem from './FilterItem';\r\nimport './Filters.css';\r\n\r\n\r\nconst Filters = ({\r\n  selectedFilter,\r\n  onChangeFilter,\r\n}) => {\r\n  const filters = [\r\n    { name: 'all', label: 'All' },\r\n    { name: 'active', label: 'Active' },\r\n    { name: 'completed', label: 'Completed' },\r\n  ];\r\n\r\n  const elements = filters.map(({ name, label }) => (\r\n    <FilterItem\r\n      key={name}\r\n      filterName={name}\r\n      filterLabel={label}\r\n      onChangeFilter={onChangeFilter}\r\n      isCurrent={selectedFilter === name}\r\n    />\r\n  ));\r\n  return <ul className=\"filters\">{elements}</ul>;\r\n};\r\nexport default Filters;\r\n\r\nFilters.propTypes = {\r\n  selectedFilter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import Footer from './Footer';\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Filters from './Filters';\r\n\r\nconst Footer = ({\r\n  total,\r\n  active,\r\n  completed,\r\n  selectedFilter,\r\n  onHandleClearCompletedClick,\r\n  onChangeFilter,\r\n}) => (\r\n  <footer className={`footer ${total === 0 ? ' hidden' : ''}`}>\r\n    <span className=\"counter\">\r\n      {active}\r\n      {' '}\r\n            items left\r\n    </span>\r\n    <Filters selectedFilter={selectedFilter} onChangeFilter={onChangeFilter} />\r\n    <button\r\n      className=\"clear-completed\"\r\n      type=\"submit\"\r\n      hidden={completed === 0}\r\n      onClick={onHandleClearCompletedClick}\r\n    >\r\n            Clear completed\r\n    </button>\r\n  </footer>\r\n);\r\n\r\nFooter.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  active: PropTypes.number.isRequired,\r\n  completed: PropTypes.number.isRequired,\r\n  selectedFilter: PropTypes.string.isRequired,\r\n  onHandleClearCompletedClick: PropTypes.func.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\nexport default Footer;\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport NewItemTodo from '../NewItemTodo';\r\nimport TodoList from '../TodoList';\r\nimport Footer from '../Footer';\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    arrayTodo: JSON.parse(localStorage.getItem('todo')) || [],\r\n    filter: localStorage.getItem('filter') || 'all',\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.saveToStorage();\r\n  }\r\n\r\n  handleAddElement = (obj) => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: [...arrayTodo, obj],\r\n    });\r\n  };\r\n\r\n\r\n  handleEditElement = (id, text) => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: arrayTodo.map(el => (el.id === id ? { ...el, text } : el)),\r\n    });\r\n  };\r\n\r\n  handleRemoveElement = (id) => {\r\n    const { arrayTodo } = this.state;\r\n    const removeIndex = arrayTodo.findIndex(el => el.id === id);\r\n    this.setState({\r\n      arrayTodo: [\r\n        ...arrayTodo.slice(0, removeIndex),\r\n        ...arrayTodo.slice(removeIndex + 1),\r\n      ],\r\n    });\r\n  };\r\n\r\n  handleToggleElement = (id, isComplete) => {\r\n    const { arrayTodo } = this.state;\r\n    const changeIndex = arrayTodo.findIndex(el => el.id === id);\r\n    const updatedObj = Object.assign({}, arrayTodo[changeIndex], { isComplete: !isComplete });\r\n    this.setState({\r\n      arrayTodo: [\r\n        ...arrayTodo.slice(0, changeIndex),\r\n        updatedObj,\r\n        ...arrayTodo.slice(changeIndex + 1),\r\n      ],\r\n    });\r\n  };\r\n\r\n  saveToStorage = () => {\r\n    const { arrayTodo } = this.state;\r\n    const str = JSON.stringify(arrayTodo);\r\n    localStorage.setItem('todo', str);\r\n  };\r\n\r\n  handleChangeFilter = (filterName) => {\r\n    this.setState({ filter: filterName });\r\n    localStorage.setItem('filter', filterName);\r\n  };\r\n\r\n  getFilter = (filterName) => {\r\n    const { arrayTodo } = this.state;\r\n    switch (filterName) {\r\n      case 'all':\r\n        return arrayTodo;\r\n      case 'completed':\r\n        return arrayTodo.filter(item => item.isComplete);\r\n      case 'active':\r\n        return arrayTodo.filter(item => !item.isComplete);\r\n      default:\r\n        return arrayTodo;\r\n    }\r\n  };\r\n\r\n  handleClearCompletedClick = () => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: arrayTodo.filter(item => !item.isComplete),\r\n    });\r\n  };\r\n\r\n  handleToggleAllClick = (e) => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: arrayTodo.map(el => ({\r\n        ...el,\r\n        isComplete: e.target.checked,\r\n      })),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { arrayTodo, filter } = this.state;\r\n    const total = arrayTodo.length;\r\n    const active = arrayTodo.filter(item => !item.isComplete).length;\r\n    const completed = arrayTodo.filter(item => item.isComplete).length;\r\n    const filterItems = this.getFilter(filter);\r\n    return (\r\n      <div>\r\n        <input\r\n          onClick={this.handleToggleAllClick}\r\n          checked={active === 0}\r\n          type=\"checkbox\"\r\n          id=\"select-all\"\r\n          className=\"select-all\"\r\n        />\r\n        <label\r\n          className=\"label-select-all\"\r\n          hidden={total === 0}\r\n          htmlFor=\"select-all\"\r\n        />\r\n        <NewItemTodo onAdd={this.handleAddElement} />\r\n        <TodoList\r\n          items={filterItems}\r\n          onToggle={this.handleToggleElement}\r\n          onRemove={this.handleRemoveElement}\r\n          onEdit={this.handleEditElement}\r\n        />\r\n        <Footer\r\n          total={total}\r\n          active={active}\r\n          completed={completed}\r\n          selectedFilter={filter}\r\n          onHandleClearCompletedClick={this.handleClearCompletedClick}\r\n          onChangeFilter={this.handleChangeFilter}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}