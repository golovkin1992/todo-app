{"version":3,"sources":["components/NewItemTodo/index.js","components/NewItemTodo/NewItemTodo.jsx","components/TodoListItem/index.js","components/TodoListItem/TodoListItem.jsx","components/TodoList/index.js","components/TodoList/TodoList.jsx","components/Filters/index.js","components/Filters/Filters.jsx","components/App/index.js","components/App/App.jsx","index.js"],"names":["NewItemTodo","handleBlur","e","_this","createElement","handleKeyDown","keyCode","target","value","onAdd","this","props","id","Date","now","text","isComplete","react_default","a","className","onBlur","onKeyDown","placeholder","Component","TodoListItem","state","isEdit","handleInputClick","_this$props","onToggle","handleBtnDestroyClick","_this$props2","onRemove","handleLabelDblClick","setState","handleNewInputEdit","handleOnBlur","_this$props3","onEdit","newInput","_this$props4","type","checked","onClick","autoFocus","defaultValue","onDoubleClick","TodoList","items","elements","map","item","key","components_TodoListItem","Object","assign","Filters","handleClick","onChangeFilter","filter","defaultChecked","name","htmlFor","App","arrayTodo","JSON","parse","localStorage","getItem","handleAddElement","obj","concat","toConsumableArray","handleEditElement","el","objectSpread","handleRemoveElement","removeIndex","findIndex","slice","handleToggleElement","saveToStorage","str","stringify","setItem","handleChangeFilter","filterName","getFilter","handleClearCompletedOnClick","handleToggleAllClick","_this$state","counter","total","length","active","completed","filterItems","hidden","components_NewItemTodo","components_TodoList","components_Filters","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.7c70e661.chunk.js","sourcesContent":["import NewItemTodo from \"./NewItemTodo\";\r\n\r\nexport default NewItemTodo;\r\n","import React, { Component } from 'react';\r\nimport './NewItemTodo.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class NewItemTodo extends Component {\r\n  handleBlur = (e) => {\r\n    this.createElement(e);\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    this.createElement(e);\r\n  };\r\n\r\n  createElement(e) {\r\n    if (!e.keyCode || e.keyCode === 13) {\r\n      if (e.target.value !== '') {\r\n        const { onAdd } = this.props;\r\n        const obj = { id: Date.now(), text: e.target.value, isComplete: false };\r\n        onAdd(obj);\r\n        e.target.value = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        className=\"header__new-item\"\r\n        onBlur={this.handleBlur}\r\n        onKeyDown={this.handleKeyDown}\r\n        placeholder=\"What needs to be done?\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nNewItemTodo.propTypes = {\r\n  onAdd: PropTypes.func.isRequired,\r\n};\r\n","import TodoListItem from \"./TodoListItem\";\r\n\r\nexport default TodoListItem;\r\n","import React, { Component } from \"react\";\r\nimport \"./TodoListItem.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class TodoListItem extends Component {\r\n  state = { isEdit: false };\r\n\r\n  handleInputClick = () => {\r\n    const { id, isComplete, onToggle } = this.props;\r\n    onToggle(id, isComplete);\r\n  };\r\n\r\n  handleBtnDestroyClick = () => {\r\n    const { id, onRemove } = this.props;\r\n    onRemove(id);\r\n  };\r\n\r\n  handleLabelDblClick = () => {\r\n    this.setState({ isEdit: true });\r\n  };\r\n\r\n  handleKeyDown = e => {\r\n    this.handleNewInputEdit(e);\r\n  };\r\n\r\n  handleOnBlur = e => {\r\n    this.handleNewInputEdit(e);\r\n  };\r\n\r\n  handleNewInputEdit = e => {\r\n    const { id, onEdit, onRemove } = this.props;\r\n    let { text } = this.props;\r\n    if (!e.keyCode || e.keyCode === 13) {\r\n      if (e.target.value !== \"\") {\r\n        text = e.target.value;\r\n        onEdit(id, text);\r\n        // eslint-disable-next-line react/no-unused-state\r\n        this.setState({ isEdit: false, newInput: `` });\r\n      } else {\r\n        onRemove(id);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text, isComplete } = this.props;\r\n    const { isEdit } = this.state;\r\n    return (\r\n      <div className=\"content-wrap\">\r\n        <input\r\n          className=\"complete\"\r\n          type=\"checkbox\"\r\n          checked={isComplete}\r\n          onClick={this.handleInputClick}\r\n        />\r\n        {isEdit ? (\r\n          <input\r\n            className=\"edit\"\r\n            // eslint-disable-next-line jsx-a11y/no-autofocus\r\n            autoFocus\r\n            onBlur={this.handleOnBlur}\r\n            onKeyDown={this.handleKeyDown}\r\n            defaultValue={text}\r\n          />\r\n        ) : (\r\n          // eslint-disable-next-line jsx-a11y/label-has-associated-control\r\n          <label className=\"caption\" onDoubleClick={this.handleLabelDblClick}>\r\n            {text}\r\n          </label>\r\n        )}\r\n        <button\r\n          className=\"destroy\"\r\n          type=\"submit\"\r\n          onClick={this.handleBtnDestroyClick}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nTodoListItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  isComplete: PropTypes.bool.isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n  onRemove: PropTypes.func.isRequired\r\n};\r\n","import TodoList from \"./TodoList\";\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoListItem from '../TodoListItem';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = (props) => {\r\n  const {\r\n    items,\r\n    onToggle,\r\n    onRemove,\r\n    onEdit,\r\n  } = props;\r\n\r\n  const elements = items.map(item => (\r\n    <li className=\"item\" key={item.id}>\r\n      <TodoListItem\r\n        {...item}\r\n        onToggle={onToggle}\r\n        onRemove={onRemove}\r\n        onEdit={onEdit}\r\n        />\r\n    </li>\r\n  ));\r\n  return <ul className=\"todo-list\">{elements}</ul>;\r\n};\r\nexport default TodoList;\r\n\r\nTodoList.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n","import Filters from \"./Filters\";\r\n\r\nexport default Filters;\r\n","import React, { Component } from \"react\";\r\nimport \"./Filters.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Filters extends Component {\r\n  handleClick = e => {\r\n    const { onChangeFilter } = this.props;\r\n    onChangeFilter(e.target.id);\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.props;\r\n    return (\r\n      <ul className=\"filters\">\r\n        <li className=\"filters__li\">\r\n          <input\r\n            className=\"filter\"\r\n            defaultChecked={filter === \"all\"}\r\n            type=\"radio\"\r\n            name=\"group\"\r\n            id=\"all\"\r\n            onClick={this.handleClick}\r\n          />\r\n          <label htmlFor=\"all\" className=\"all\">\r\n            All\r\n          </label>\r\n        </li>\r\n        <li className=\"filters__li\">\r\n          <input\r\n            defaultChecked={filter === \"active\"}\r\n            type=\"radio\"\r\n            name=\"group\"\r\n            className=\"filter\"\r\n            onClick={this.handleClick}\r\n            id=\"active\"\r\n          />\r\n          <label htmlFor=\"active\" className=\"all\">\r\n            Active\r\n          </label>\r\n        </li>\r\n        <li className=\"filters__li\">\r\n          <input\r\n            defaultChecked={filter === \"completed\"}\r\n            type=\"radio\"\r\n            name=\"group\"\r\n            className=\"filter\"\r\n            onClick={this.handleClick}\r\n            id=\"completed\"\r\n          />\r\n          <label htmlFor=\"completed\" className=\"all\">\r\n            Completed\r\n          </label>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nFilters.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired\r\n};\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport NewItemTodo from '../NewItemTodo';\r\nimport TodoList from '../TodoList';\r\nimport Filters from '../Filters';\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    arrayTodo: JSON.parse(localStorage.getItem('todo')) || [],\r\n    filter: localStorage.getItem('filter') || 'all',\r\n  };\r\n\r\n  handleAddElement = (obj) => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: [...arrayTodo, obj],\r\n    });\r\n  };\r\n\r\n  handleEditElement = (id, text) => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: arrayTodo.map(el => (el.id === id ? { ...el, text } : el)),\r\n    });\r\n  };\r\n\r\n  handleRemoveElement = (id) => {\r\n    const { arrayTodo } = this.state;\r\n    const removeIndex = arrayTodo.findIndex(el => el.id === id);\r\n    this.setState({\r\n      arrayTodo: [\r\n        ...arrayTodo.slice(0, removeIndex),\r\n        ...arrayTodo.slice(removeIndex + 1),\r\n      ],\r\n    });\r\n  };\r\n\r\n  handleToggleElement = (id, isComplete) => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: arrayTodo.map(el =>\r\n        (el.id === id ? { ...el, isComplete: !isComplete } : el),\r\n      ),\r\n    });\r\n  };\r\n\r\n  saveToStorage = () => {\r\n    const { arrayTodo } = this.state;\r\n    const str = JSON.stringify(arrayTodo);\r\n    localStorage.setItem('todo', str);\r\n  };\r\n\r\n  handleChangeFilter = (filterName) => {\r\n    this.setState({ filter: filterName });\r\n    localStorage.setItem('filter', filterName);\r\n  };\r\n\r\n  getFilter = (filterName) => {\r\n    const { arrayTodo } = this.state;\r\n    switch (filterName) {\r\n      case 'all':\r\n        return arrayTodo;\r\n      case 'completed':\r\n        return arrayTodo.filter(item => item.isComplete);\r\n      case 'active':\r\n        return arrayTodo.filter(item => !item.isComplete);\r\n      default:\r\n        return arrayTodo;\r\n    }\r\n  };\r\n\r\n  handleClearCompletedOnClick = () => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: arrayTodo.filter(item => !item.isComplete),\r\n    });\r\n  };\r\n\r\n  handleToggleAllClick = (e) => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: arrayTodo.map(el => ({\r\n        ...el,\r\n        isComplete: e.target.checked,\r\n      })),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { arrayTodo, filter } = this.state;\r\n    const counter = {\r\n      total: arrayTodo.length,\r\n      active: arrayTodo.filter(item => !item.isComplete).length,\r\n      completed: arrayTodo.filter(item => item.isComplete).length,\r\n    };\r\n    const { total, active, completed } = counter;\r\n    const filterItems = this.getFilter(filter);\r\n    this.saveToStorage();\r\n    return (\r\n      <div>\r\n        <input\r\n          onClick={this.handleToggleAllClick}\r\n          checked={active === 0}\r\n          type=\"checkbox\"\r\n          id=\"select-all\"\r\n          className=\"select-all\"\r\n        />\r\n        <label\r\n          className=\"label-select-all\"\r\n          hidden={total === 0}\r\n          htmlFor=\"select-all\"\r\n        />\r\n        <NewItemTodo onAdd={this.handleAddElement} />\r\n        <TodoList\r\n          items={filterItems}\r\n          onToggle={this.handleToggleElement}\r\n          onRemove={this.handleRemoveElement}\r\n          onEdit={this.handleEditElement}\r\n        />\r\n        <footer className=\"footer\" hidden={total === 0}>\r\n          <span className=\"counter\">\r\n            {active}\r\n            items left\r\n          </span>\r\n          <Filters filter={filter} onChangeFilter={this.handleChangeFilter} />\r\n          <button\r\n            className=\"clear-completed\"\r\n            type=\"submit\"\r\n            hidden={completed <= 0}\r\n            onClick={this.handleClearCompletedOnClick}\r\n          >\r\n            Clear completed\r\n          </button>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}