{"version":3,"sources":["components/NewItemTodo/index.js","components/NewItemTodo/NewItemTodo.jsx","components/TodoList/TodoListItem/index.js","components/TodoList/TodoListItem/TodoListItem.jsx","components/TodoList/index.js","components/TodoList/TodoList.jsx","components/Footer/Filters/FilterItem/index.js","components/Footer/Filters/FilterItem/FilterItem.jsx","components/Footer/Filters/index.js","components/Footer/Filters/Filters.jsx","components/Footer/index.js","components/Footer/Footer.jsx","components/App/index.js","components/App/App.jsx","index.js"],"names":["NewItemTodo","_ref","onAdd","createElement","e","keyCode","target","value","obj","id","Date","now","text","isComplete","react_default","a","className","onBlur","onKeyDown","placeholder","TodoListItem","state","isEdit","inputFocusRef","React","createRef","handleInputClick","_this$props","_this","props","onToggle","handleBtnDestroyClick","_this$props2","onRemove","handleLabelDblClick","setState","handleKeyDown","handleNewInputEdit","handleOnBlur","_this$props3","onEdit","this","current","focus","_this$props4","onClick","onChange","type","checked","ref","defaultValue","onDoubleClick","PureComponent","TodoList","items","elements","map","item","TodoList_TodoListItem","Object","assign","key","FilterItem","handleClick","onChangeFilter","isCurrent","filterName","filterLabel","defaultChecked","name","htmlFor","Filters","selectedFilter","label","_ref2","Filters_FilterItem","Footer","total","active","completed","onHandleClearCompletedClick","concat","Footer_Filters","hidden","App","arrayTodo","JSON","parse","localStorage","getItem","filter","handleAddElement","toConsumableArray","handleEditElement","el","objectSpread","handleRemoveElement","removeIndex","findIndex","slice","handleToggleElement","changeIndex","updatedObj","saveToStorage","str","stringify","setItem","handleChangeFilter","getFilter","handleClearCompletedClick","handleToggleAllClick","_this$state","length","filterItems","components_NewItemTodo","components_TodoList","components_Footer","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.3ae4f73c.chunk.js","sourcesContent":["import NewItemTodo from './NewItemTodo';\r\n\r\nexport default NewItemTodo;\r\n","import React from 'react';\r\nimport './NewItemTodo.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NewItemTodo = ({\r\n  onAdd,\r\n}) => {\r\n  const createElement = (e) => {\r\n    if (!e.keyCode || e.keyCode === 13) {\r\n      if (e.target.value !== '') {\r\n        const obj = { id: Date.now(), text: e.target.value, isComplete: false };\r\n        onAdd(obj);\r\n        e.target.value = '';\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    createElement(e);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    createElement(e);\r\n  };\r\n\r\n\r\n  return (\r\n    <input\r\n      className=\"header__new-item\"\r\n      onBlur={handleBlur}\r\n      onKeyDown={handleKeyDown}\r\n      placeholder=\"What needs to be done?\"\r\n    />\r\n  );\r\n};\r\n\r\nNewItemTodo.propTypes = {\r\n  onAdd: PropTypes.func.isRequired,\r\n};\r\nexport default NewItemTodo;\r\n","import TodoListItem from './TodoListItem';\r\n\r\nexport default TodoListItem;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TodoListItem.css';\r\n\r\n\r\nexport default class TodoListItem extends PureComponent {\r\n  state = { isEdit: false };\r\n\r\n  inputFocusRef = React.createRef();\r\n\r\n  componentDidUpdate() {\r\n    const { isEdit } = this.state;\r\n    if (isEdit) {\r\n      this.inputFocusRef.current.focus();\r\n    }\r\n  }\r\n\r\n\r\n  handleInputClick = () => {\r\n    const { id, isComplete, onToggle } = this.props;\r\n    onToggle(id, isComplete);\r\n  };\r\n\r\n  handleBtnDestroyClick = () => {\r\n    const { id, onRemove } = this.props;\r\n    onRemove(id);\r\n  };\r\n\r\n\r\n  handleLabelDblClick = () => {\r\n    this.setState({ isEdit: true });\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    this.handleNewInputEdit(e);\r\n  };\r\n\r\n  handleOnBlur = (e) => {\r\n    this.handleNewInputEdit(e);\r\n  };\r\n\r\n  handleNewInputEdit = (e) => {\r\n    const { id, onEdit, onRemove } = this.props;\r\n    let { text } = this.props;\r\n    if (!e.keyCode || e.keyCode === 13) {\r\n      if (e.target.value !== '') {\r\n        text = e.target.value;\r\n        onEdit(id, text);\r\n        this.setState({ isEdit: false });\r\n      } else {\r\n        onRemove(id);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text, isComplete } = this.props;\r\n    const { isEdit } = this.state;\r\n    return (\r\n      <li className=\"item\">\r\n        <div className=\"content-wrap\">\r\n          <input\r\n            onClick={this.handleInputClick}\r\n            onChange={() => {}}\r\n            className=\"complete\"\r\n            type=\"checkbox\"\r\n            checked={isComplete}\r\n          />\r\n          {isEdit ? (\r\n            <input\r\n              className=\"edit\"\r\n              ref={this.inputFocusRef}\r\n              onBlur={this.handleOnBlur}\r\n              onKeyDown={this.handleKeyDown}\r\n              defaultValue={text}\r\n            />\r\n          ) : (\r\n            <span className=\"caption\" onDoubleClick={this.handleLabelDblClick}>\r\n              {text}\r\n            </span>\r\n          )}\r\n          <button\r\n            className=\"destroy\"\r\n            type=\"submit\"\r\n            onClick={this.handleBtnDestroyClick}\r\n          />\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nTodoListItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  isComplete: PropTypes.bool.isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n","import TodoList from './TodoList';\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoListItem from './TodoListItem/index';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = ({\r\n  items,\r\n  onToggle,\r\n  onRemove,\r\n  onEdit,\r\n}) => {\r\n  const elements = items.map(item => (\r\n    <TodoListItem\r\n      key={item.id}\r\n      {...item}\r\n      onToggle={onToggle}\r\n      onRemove={onRemove}\r\n      onEdit={onEdit}\r\n    />\r\n\r\n  ));\r\n  return <ul className=\"todo-list\">{elements}</ul>;\r\n};\r\nexport default TodoList;\r\n\r\nTodoList.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n","import FilterItem from './FilterItem';\r\n\r\nexport default FilterItem;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class FilterItem extends PureComponent {\r\n  handleClick = (e) => {\r\n    const { onChangeFilter } = this.props;\r\n    onChangeFilter(e.target.id);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isCurrent,\r\n      filterName,\r\n      filterLabel,\r\n    } = this.props;\r\n    return (\r\n      <li className=\"filters__item\">\r\n        <input\r\n          className=\"filter\"\r\n          defaultChecked={isCurrent}\r\n          type=\"radio\"\r\n          name=\"group\"\r\n          id={filterName}\r\n          onClick={this.handleClick}\r\n        />\r\n        <label\r\n          htmlFor={filterName}\r\n          className={filterName}\r\n        >\r\n          {filterLabel}\r\n        </label>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nFilterItem.propTypes = {\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n  isCurrent: PropTypes.bool.isRequired,\r\n  filterName: PropTypes.string.isRequired,\r\n  filterLabel: PropTypes.string.isRequired,\r\n};\r\n","import Filters from './Filters';\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FilterItem from './FilterItem/index';\r\nimport './Filters.css';\r\n\r\n\r\nconst Filters = ({\r\n  selectedFilter,\r\n  onChangeFilter,\r\n}) => {\r\n  const filters = [\r\n    { name: 'all', label: 'All' },\r\n    { name: 'active', label: 'Active' },\r\n    { name: 'completed', label: 'Completed' },\r\n  ];\r\n\r\n  const elements = filters.map(({ name, label }) => (\r\n    <FilterItem\r\n      key={name}\r\n      filterName={name}\r\n      filterLabel={label}\r\n      onChangeFilter={onChangeFilter}\r\n      isCurrent={selectedFilter === name}\r\n    />\r\n  ));\r\n  return <ul className=\"filters\">{elements}</ul>;\r\n};\r\nexport default Filters;\r\n\r\nFilters.propTypes = {\r\n  selectedFilter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import Footer from './Footer';\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Filters from './Filters';\r\n\r\nconst Footer = ({\r\n  total,\r\n  active,\r\n  completed,\r\n  selectedFilter,\r\n  onHandleClearCompletedClick,\r\n  onChangeFilter,\r\n}) => (\r\n  <footer className={`footer ${total === 0 ? ' hidden' : ''}`}>\r\n    <span className=\"counter\">\r\n      {`${active} items left`}\r\n    </span>\r\n    <Filters selectedFilter={selectedFilter} onChangeFilter={onChangeFilter} />\r\n    <button\r\n      className=\"clear-completed\"\r\n      type=\"submit\"\r\n      hidden={completed === 0}\r\n      onClick={onHandleClearCompletedClick}\r\n    >\r\n            Clear completed\r\n    </button>\r\n  </footer>\r\n);\r\n\r\nFooter.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  active: PropTypes.number.isRequired,\r\n  completed: PropTypes.number.isRequired,\r\n  selectedFilter: PropTypes.string.isRequired,\r\n  onHandleClearCompletedClick: PropTypes.func.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\nexport default Footer;\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport NewItemTodo from '../NewItemTodo';\r\nimport TodoList from '../TodoList';\r\nimport Footer from '../Footer';\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    arrayTodo: JSON.parse(localStorage.getItem('todo')) || [],\r\n    filter: localStorage.getItem('filter') || 'all',\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.saveToStorage();\r\n  }\r\n\r\n  handleAddElement = (obj) => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: [...arrayTodo, obj],\r\n    });\r\n  };\r\n\r\n\r\n  handleEditElement = (id, text) => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: arrayTodo.map(el => (el.id === id ? { ...el, text } : el)),\r\n    });\r\n  };\r\n\r\n  handleRemoveElement = (id) => {\r\n    const { arrayTodo } = this.state;\r\n    const removeIndex = arrayTodo.findIndex(el => el.id === id);\r\n    this.setState({\r\n      arrayTodo: [\r\n        ...arrayTodo.slice(0, removeIndex),\r\n        ...arrayTodo.slice(removeIndex + 1),\r\n      ],\r\n    });\r\n  };\r\n\r\n  handleToggleElement = (id, isComplete) => {\r\n    const { arrayTodo } = this.state;\r\n    const changeIndex = arrayTodo.findIndex(el => el.id === id);\r\n    const updatedObj = Object.assign({}, arrayTodo[changeIndex], { isComplete: !isComplete });\r\n    this.setState({\r\n      arrayTodo: [\r\n        ...arrayTodo.slice(0, changeIndex),\r\n        updatedObj,\r\n        ...arrayTodo.slice(changeIndex + 1),\r\n      ],\r\n    });\r\n  };\r\n\r\n  saveToStorage = () => {\r\n    const { arrayTodo } = this.state;\r\n    const str = JSON.stringify(arrayTodo);\r\n    localStorage.setItem('todo', str);\r\n  };\r\n\r\n  handleChangeFilter = (filterName) => {\r\n    this.setState({ filter: filterName });\r\n    localStorage.setItem('filter', filterName);\r\n  };\r\n\r\n  getFilter = (filterName) => {\r\n    const { arrayTodo } = this.state;\r\n    switch (filterName) {\r\n      case 'all':\r\n        return arrayTodo;\r\n      case 'completed':\r\n        return arrayTodo.filter(item => item.isComplete);\r\n      case 'active':\r\n        return arrayTodo.filter(item => !item.isComplete);\r\n      default:\r\n        return arrayTodo;\r\n    }\r\n  };\r\n\r\n  handleClearCompletedClick = () => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: arrayTodo.filter(item => !item.isComplete),\r\n    });\r\n  };\r\n\r\n  handleToggleAllClick = (e) => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: arrayTodo.map(el => ({\r\n        ...el,\r\n        isComplete: e.target.checked,\r\n      })),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { arrayTodo, filter } = this.state;\r\n    const total = arrayTodo.length;\r\n    const active = arrayTodo.filter(item => !item.isComplete).length;\r\n    const completed = arrayTodo.filter(item => item.isComplete).length;\r\n    const filterItems = this.getFilter(filter);\r\n    return (\r\n      <div>\r\n\r\n        <label\r\n          className=\"label-select-all\"\r\n          hidden={total === 0}\r\n          htmlFor=\"select-all\"\r\n        >\r\n          <input\r\n            onClick={this.handleToggleAllClick}\r\n            onChange={() => {}}\r\n            checked={active === 0}\r\n            type=\"checkbox\"\r\n            id=\"select-all\"\r\n            className=\"select-all\"\r\n          />\r\n          <span className=\"select-all-pseudo\" />\r\n        </label>\r\n        <NewItemTodo onAdd={this.handleAddElement} />\r\n        <TodoList\r\n          items={filterItems}\r\n          onToggle={this.handleToggleElement}\r\n          onRemove={this.handleRemoveElement}\r\n          onEdit={this.handleEditElement}\r\n        />\r\n        <Footer\r\n          total={total}\r\n          active={active}\r\n          completed={completed}\r\n          selectedFilter={filter}\r\n          onHandleClearCompletedClick={this.handleClearCompletedClick}\r\n          onChangeFilter={this.handleChangeFilter}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}