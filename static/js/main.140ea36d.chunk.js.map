{"version":3,"sources":["components/NewItemTodo/index.js","components/NewItemTodo/NewItemTodo.jsx","components/TodoListItem/index.js","components/TodoListItem/TodoListItem.jsx","components/TodoList/index.js","components/TodoList/TodoList.jsx","components/FilterItem/index.js","components/FilterItem/FilterItem.jsx","components/Filters/index.js","components/Filters/Filters.jsx","components/App/index.js","components/App/App.jsx","index.js"],"names":["NewItemTodo","handleBlur","e","_this","createElement","handleKeyDown","keyCode","target","value","onAdd","this","props","id","Date","now","text","isComplete","react_default","a","className","onBlur","onKeyDown","placeholder","Component","TodoListItem","state","isEdit","handleInputClick","_this$props","onToggle","handleBtnDestroyClick","_this$props2","onRemove","handleLabelDblClick","setState","handleNewInputEdit","handleOnBlur","_this$props3","onEdit","newInput","_this$props4","type","checked","onClick","autoFocus","defaultValue","onDoubleClick","TodoList","items","elements","map","item","key","components_TodoListItem","Object","assign","FilterItem","handleClick","onChangeFilter","currentFilter","filterName","filterLabel","defaultChecked","name","htmlFor","Filters","filter","label","_ref","components_FilterItem","App","arrayTodo","JSON","parse","localStorage","getItem","handleAddElement","obj","concat","toConsumableArray","handleEditElement","el","objectSpread","handleRemoveElement","removeIndex","findIndex","slice","handleToggleElement","saveToStorage","str","stringify","setItem","handleChangeFilter","getFilter","handleClearCompletedClick","handleToggleAllClick","_this$state","total","length","active","completed","filterItems","hidden","components_NewItemTodo","components_TodoList","components_Filters","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.140ea36d.chunk.js","sourcesContent":["import NewItemTodo from \"./NewItemTodo\";\r\n\r\nexport default NewItemTodo;\r\n","import React, { Component } from 'react';\r\nimport './NewItemTodo.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class NewItemTodo extends Component {\r\n  handleBlur = (e) => {\r\n    this.createElement(e);\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    this.createElement(e);\r\n  };\r\n\r\n  createElement(e) {\r\n    if (!e.keyCode || e.keyCode === 13) {\r\n      if (e.target.value !== '') {\r\n        const { onAdd } = this.props;\r\n        const obj = { id: Date.now(), text: e.target.value, isComplete: false };\r\n        onAdd(obj);\r\n        e.target.value = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        className=\"header__new-item\"\r\n        onBlur={this.handleBlur}\r\n        onKeyDown={this.handleKeyDown}\r\n        placeholder=\"What needs to be done?\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nNewItemTodo.propTypes = {\r\n  onAdd: PropTypes.func.isRequired,\r\n};\r\n","import TodoListItem from \"./TodoListItem\";\r\n\r\nexport default TodoListItem;\r\n","import React, { Component } from 'react';\r\nimport './TodoListItem.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class TodoListItem extends Component {\r\n  state = { isEdit: false };\r\n\r\n  handleInputClick = () => {\r\n    const { id, isComplete, onToggle } = this.props;\r\n    onToggle(id, isComplete);\r\n  };\r\n\r\n  handleBtnDestroyClick = () => {\r\n    const { id, onRemove } = this.props;\r\n    onRemove(id);\r\n  };\r\n\r\n  handleLabelDblClick = () => {\r\n    this.setState({ isEdit: true });\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    this.handleNewInputEdit(e);\r\n  };\r\n\r\n  handleOnBlur = (e) => {\r\n    this.handleNewInputEdit(e);\r\n  };\r\n\r\n  handleNewInputEdit = (e) => {\r\n    const { id, onEdit, onRemove } = this.props;\r\n    let { text } = this.props;\r\n    if (!e.keyCode || e.keyCode === 13) {\r\n      if (e.target.value !== '') {\r\n        text = e.target.value;\r\n        onEdit(id, text);\r\n        // eslint-disable-next-line react/no-unused-state\r\n        this.setState({ isEdit: false, newInput: '' });\r\n      } else {\r\n        onRemove(id);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text, isComplete } = this.props;\r\n    const { isEdit } = this.state;\r\n    return (\r\n      <div className=\"content-wrap\">\r\n        <input\r\n          className=\"complete\"\r\n          type=\"checkbox\"\r\n          checked={isComplete}\r\n          onClick={this.handleInputClick}\r\n        />\r\n        {isEdit ? (\r\n          <input\r\n            className=\"edit\"\r\n            // eslint-disable-next-line jsx-a11y/no-autofocus\r\n            autoFocus\r\n            onBlur={this.handleOnBlur}\r\n            onKeyDown={this.handleKeyDown}\r\n            defaultValue={text}\r\n          />\r\n        ) : (\r\n          // eslint-disable-next-line jsx-a11y/label-has-associated-control\r\n          <label className=\"caption\" onDoubleClick={this.handleLabelDblClick}>\r\n            {text}\r\n          </label>\r\n        )}\r\n        <button\r\n          className=\"destroy\"\r\n          type=\"submit\"\r\n          onClick={this.handleBtnDestroyClick}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nTodoListItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  isComplete: PropTypes.bool.isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n","import TodoList from \"./TodoList\";\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoListItem from '../TodoListItem';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = (props) => {\r\n  const {\r\n    items,\r\n    onToggle,\r\n    onRemove,\r\n    onEdit,\r\n  } = props;\r\n\r\n  const elements = items.map(item => (\r\n    <li className=\"item\" key={item.id}>\r\n      <TodoListItem\r\n        {...item}\r\n        onToggle={onToggle}\r\n        onRemove={onRemove}\r\n        onEdit={onEdit}\r\n      />\r\n    </li>\r\n  ));\r\n  return <ul className=\"todo-list\">{elements}</ul>;\r\n};\r\nexport default TodoList;\r\n\r\nTodoList.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n","import FilterItem from './FilterItem';\r\n\r\nexport default FilterItem;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class FilterItem extends Component {\r\n  handleClick = (e) => {\r\n    const { onChangeFilter } = this.props;\r\n    onChangeFilter(e.target.id);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      currentFilter,\r\n      filterName,\r\n      filterLabel,\r\n    } = this.props;\r\n    return (\r\n      <li className=\"filters__li\">\r\n        <input\r\n          className=\"filter\"\r\n          defaultChecked={currentFilter === filterName}\r\n          type=\"radio\"\r\n          name=\"group\"\r\n          id={filterName}\r\n          onClick={this.handleClick}\r\n        />\r\n        <label\r\n          htmlFor={filterName}\r\n          className={filterName}\r\n        >\r\n          {filterLabel}\r\n        </label>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nFilterItem.propTypes = {\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n  currentFilter: PropTypes.string.isRequired,\r\n  filterName: PropTypes.string.isRequired,\r\n  filterLabel: PropTypes.string.isRequired,\r\n};\r\n","import Filters from \"./Filters\";\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FilterItem from '../FilterItem';\r\nimport './Filters.css';\r\n\r\n\r\nconst Filters = (props) => {\r\n  const { filter, onChangeFilter } = props;\r\n  const filters = [\r\n    { name: 'all', label: 'All' },\r\n    { name: 'active', label: 'Active' },\r\n    { name: 'completed', label: 'Completed' },\r\n  ];\r\n\r\n  const elements = filters.map(({ name, label }) => (\r\n    <FilterItem\r\n      key={name}\r\n      currentFilter={filter}\r\n      filterName={name}\r\n      filterLabel={label}\r\n      onChangeFilter={onChangeFilter}\r\n    />\r\n  ));\r\n  return <ul className=\"filters\">{elements}</ul>;\r\n};\r\nexport default Filters;\r\n\r\nFilters.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport NewItemTodo from '../NewItemTodo';\r\nimport TodoList from '../TodoList';\r\nimport Filters from '../Filters';\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    arrayTodo: JSON.parse(localStorage.getItem('todo')) || [],\r\n    filter: localStorage.getItem('filter') || 'all',\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.saveToStorage();\r\n  }\r\n\r\n  handleAddElement = (obj) => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: [...arrayTodo, obj],\r\n    });\r\n  };\r\n\r\n\r\n  handleEditElement = (id, text) => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: arrayTodo.map(el => (el.id === id ? { ...el, text } : el)),\r\n    });\r\n  };\r\n\r\n  handleRemoveElement = (id) => {\r\n    const { arrayTodo } = this.state;\r\n    const removeIndex = arrayTodo.findIndex(el => el.id === id);\r\n    this.setState({\r\n      arrayTodo: [\r\n        ...arrayTodo.slice(0, removeIndex),\r\n        ...arrayTodo.slice(removeIndex + 1),\r\n      ],\r\n    });\r\n  };\r\n\r\n  handleToggleElement = (id, isComplete) => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: arrayTodo.map(el => (el.id === id ? { ...el, isComplete: !isComplete } : el)),\r\n    });\r\n  };\r\n\r\n  saveToStorage = () => {\r\n    const { arrayTodo } = this.state;\r\n    const str = JSON.stringify(arrayTodo);\r\n    localStorage.setItem('todo', str);\r\n  };\r\n\r\n  handleChangeFilter = (filterName) => {\r\n    this.setState({ filter: filterName });\r\n    localStorage.setItem('filter', filterName);\r\n  };\r\n\r\n  getFilter = (filterName) => {\r\n    const { arrayTodo } = this.state;\r\n    switch (filterName) {\r\n      case 'all':\r\n        return arrayTodo;\r\n      case 'completed':\r\n        return arrayTodo.filter(item => item.isComplete);\r\n      case 'active':\r\n        return arrayTodo.filter(item => !item.isComplete);\r\n      default:\r\n        return arrayTodo;\r\n    }\r\n  };\r\n\r\n  handleClearCompletedClick = () => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: arrayTodo.filter(item => !item.isComplete),\r\n    });\r\n  };\r\n\r\n  handleToggleAllClick = (e) => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: arrayTodo.map(el => ({\r\n        ...el,\r\n        isComplete: e.target.checked,\r\n      })),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { arrayTodo, filter } = this.state;\r\n    const total = arrayTodo.length;\r\n    const active = arrayTodo.filter(item => !item.isComplete).length;\r\n    const completed = arrayTodo.filter(item => item.isComplete).length;\r\n    const filterItems = this.getFilter(filter);\r\n    return (\r\n      <div>\r\n        <input\r\n          onClick={this.handleToggleAllClick}\r\n          checked={active === 0}\r\n          type=\"checkbox\"\r\n          id=\"select-all\"\r\n          className=\"select-all\"\r\n        />\r\n        <label\r\n          className=\"label-select-all\"\r\n          hidden={total === 0}\r\n          htmlFor=\"select-all\"\r\n        />\r\n        <NewItemTodo onAdd={this.handleAddElement} />\r\n        <TodoList\r\n          items={filterItems}\r\n          onToggle={this.handleToggleElement}\r\n          onRemove={this.handleRemoveElement}\r\n          onEdit={this.handleEditElement}\r\n        />\r\n        <footer className={`footer ${total === 0 ? ' hidden' : ''}`}>\r\n          <span className=\"counter\">\r\n            {active}\r\n            {' '}\r\n            items left\r\n          </span>\r\n          <Filters filter={filter} onChangeFilter={this.handleChangeFilter} />\r\n          <button\r\n            className=\"clear-completed\"\r\n            type=\"submit\"\r\n            hidden={completed === 0}\r\n            onClick={this.handleClearCompletedClick}\r\n          >\r\n            Clear completed\r\n          </button>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}