{"version":3,"sources":["components/NewItemTodo/index.js","components/NewItemTodo/NewItemTodo.jsx","components/TodoList/TodoListItem/index.js","components/TodoList/TodoListItem/TodoListItem.jsx","components/TodoList/index.js","components/TodoList/TodoList.jsx","components/Footer/Filters/FilterItem.jsx","components/Footer/Filters/index.js","components/Footer/Filters/Filters.jsx","components/Footer/index.js","components/Footer/Footer.jsx","components/App/index.js","components/App/App.jsx","index.js"],"names":["NewItemTodo","handleBlur","e","_this","createElement","handleKeyDown","keyCode","target","value","onAdd","this","props","id","Date","now","text","isComplete","react_default","a","className","onBlur","onKeyDown","placeholder","Component","TodoListItem","state","isEdit","handleInputClick","_this$props","onToggle","handleBtnDestroyClick","_this$props2","onRemove","handleLabelDblClick","setState","handleNewInputEdit","handleOnBlur","_this$props3","onEdit","_this$props4","type","checked","onClick","autoFocus","defaultValue","onDoubleClick","TodoList","_ref","items","elements","map","item","TodoList_TodoListItem","Object","assign","key","FilterItem","isCurrent","filterName","filterLabel","onChangeFilter","defaultChecked","name","htmlFor","Filters","selectedFilter","label","_ref2","Filters_FilterItem","Footer","total","active","completed","onHandleClearCompletedClick","concat","Footer_Filters","hidden","App","arrayTodo","JSON","parse","localStorage","getItem","filter","handleAddElement","obj","toConsumableArray","handleEditElement","el","objectSpread","handleRemoveElement","removeIndex","findIndex","slice","handleToggleElement","changeIndex","updatedObj","saveToStorage","str","stringify","setItem","handleChangeFilter","getFilter","handleClearCompletedClick","handleToggleAllClick","_this$state","length","filterItems","components_NewItemTodo","components_TodoList","components_Footer","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.6f9351fd.chunk.js","sourcesContent":["import NewItemTodo from \"./NewItemTodo\";\r\n\r\nexport default NewItemTodo;\r\n","import React, { Component } from 'react';\r\nimport './NewItemTodo.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class NewItemTodo extends Component {\r\n  handleBlur = (e) => {\r\n    this.createElement(e);\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    this.createElement(e);\r\n  };\r\n\r\n  createElement(e) {\r\n    if (!e.keyCode || e.keyCode === 13) {\r\n      if (e.target.value !== '') {\r\n        const { onAdd } = this.props;\r\n        const obj = { id: Date.now(), text: e.target.value, isComplete: false };\r\n        onAdd(obj);\r\n        e.target.value = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        className=\"header__new-item\"\r\n        onBlur={this.handleBlur}\r\n        onKeyDown={this.handleKeyDown}\r\n        placeholder=\"What needs to be done?\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nNewItemTodo.propTypes = {\r\n  onAdd: PropTypes.func.isRequired,\r\n};\r\n","import TodoListItem from './TodoListItem';\r\n\r\nexport default TodoListItem;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TodoListItem.css';\r\n\r\n\r\nexport default class TodoListItem extends Component {\r\n  state = { isEdit: false };\r\n\r\n  handleInputClick = () => {\r\n    const { id, isComplete, onToggle } = this.props;\r\n    onToggle(id, isComplete);\r\n  };\r\n\r\n  handleBtnDestroyClick = () => {\r\n    const { id, onRemove } = this.props;\r\n    onRemove(id);\r\n  };\r\n\r\n  handleLabelDblClick = () => {\r\n    this.setState({ isEdit: true });\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    this.handleNewInputEdit(e);\r\n  };\r\n\r\n  handleOnBlur = (e) => {\r\n    this.handleNewInputEdit(e);\r\n  };\r\n\r\n  handleNewInputEdit = (e) => {\r\n    const { id, onEdit, onRemove } = this.props;\r\n    let { text } = this.props;\r\n    if (!e.keyCode || e.keyCode === 13) {\r\n      if (e.target.value !== '') {\r\n        text = e.target.value;\r\n        onEdit(id, text);\r\n        this.setState({ isEdit: false });\r\n      } else {\r\n        onRemove(id);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text, isComplete } = this.props;\r\n    const { isEdit } = this.state;\r\n    return (\r\n      <li className=\"item\">\r\n        <div className=\"content-wrap\">\r\n          <input\r\n            className=\"complete\"\r\n            type=\"checkbox\"\r\n            checked={isComplete}\r\n            onClick={this.handleInputClick}\r\n          />\r\n          {isEdit ? (\r\n            <input\r\n              className=\"edit\"\r\n            // eslint-disable-next-line jsx-a11y/no-autofocus\r\n              autoFocus\r\n              onBlur={this.handleOnBlur}\r\n              onKeyDown={this.handleKeyDown}\r\n              defaultValue={text}\r\n            />\r\n          ) : (\r\n          // eslint-disable-next-line jsx-a11y/label-has-associated-control\r\n            <label className=\"caption\" onDoubleClick={this.handleLabelDblClick}>\r\n              {text}\r\n            </label>\r\n          )}\r\n          <button\r\n            className=\"destroy\"\r\n            type=\"submit\"\r\n            onClick={this.handleBtnDestroyClick}\r\n          />\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nTodoListItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  isComplete: PropTypes.bool.isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n","import TodoList from './TodoList';\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoListItem from './TodoListItem/index';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = ({\r\n  items,\r\n  onToggle,\r\n  onRemove,\r\n  onEdit,\r\n}) => {\r\n  const elements = items.map(item => (\r\n    <TodoListItem\r\n      key={item.id}\r\n      {...item}\r\n      onToggle={onToggle}\r\n      onRemove={onRemove}\r\n      onEdit={onEdit}\r\n    />\r\n\r\n  ));\r\n  return <ul className=\"todo-list\">{elements}</ul>;\r\n};\r\nexport default TodoList;\r\n\r\nTodoList.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onEdit: PropTypes.func.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FilterItem = ({\r\n  isCurrent,\r\n  filterName,\r\n  filterLabel,\r\n  onChangeFilter,\r\n}) => {\r\n  const handleClick = (e) => {\r\n    onChangeFilter(e.target.id);\r\n  };\r\n\r\n  return (\r\n    <li className=\"filters__item\">\r\n      <input\r\n        className=\"filter\"\r\n        defaultChecked={isCurrent}\r\n        type=\"radio\"\r\n        name=\"group\"\r\n        id={filterName}\r\n        onClick={handleClick}\r\n      />\r\n      <label\r\n        htmlFor={filterName}\r\n        className={filterName}\r\n      >\r\n        {filterLabel}\r\n      </label>\r\n    </li>\r\n  );\r\n};\r\n\r\nFilterItem.propTypes = {\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n  isCurrent: PropTypes.bool.isRequired,\r\n  filterName: PropTypes.string.isRequired,\r\n  filterLabel: PropTypes.string.isRequired,\r\n};\r\nexport default FilterItem;\r\n","import Filters from './Filters';\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FilterItem from './FilterItem';\r\nimport './Filters.css';\r\n\r\n\r\nconst Filters = ({\r\n  selectedFilter,\r\n  onChangeFilter,\r\n}) => {\r\n  const filters = [\r\n    { name: 'all', label: 'All' },\r\n    { name: 'active', label: 'Active' },\r\n    { name: 'completed', label: 'Completed' },\r\n  ];\r\n\r\n  const elements = filters.map(({ name, label }) => (\r\n    <FilterItem\r\n      key={name}\r\n      filterName={name}\r\n      filterLabel={label}\r\n      onChangeFilter={onChangeFilter}\r\n      isCurrent={selectedFilter === name}\r\n    />\r\n  ));\r\n  return <ul className=\"filters\">{elements}</ul>;\r\n};\r\nexport default Filters;\r\n\r\nFilters.propTypes = {\r\n  selectedFilter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import Footer from './Footer';\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Filters from './Filters';\r\n\r\nconst Footer = ({\r\n  total,\r\n  active,\r\n  completed,\r\n  selectedFilter,\r\n  onHandleClearCompletedClick,\r\n  onChangeFilter,\r\n}) => (\r\n  <footer className={`footer ${total === 0 ? ' hidden' : ''}`}>\r\n    <span className=\"counter\">\r\n      {active}\r\n      {' '}\r\n            items left\r\n    </span>\r\n    <Filters selectedFilter={selectedFilter} onChangeFilter={onChangeFilter} />\r\n    <button\r\n      className=\"clear-completed\"\r\n      type=\"submit\"\r\n      hidden={completed === 0}\r\n      onClick={onHandleClearCompletedClick}\r\n    >\r\n            Clear completed\r\n    </button>\r\n  </footer>\r\n);\r\n\r\nFooter.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  active: PropTypes.number.isRequired,\r\n  completed: PropTypes.number.isRequired,\r\n  selectedFilter: PropTypes.string.isRequired,\r\n  onHandleClearCompletedClick: PropTypes.func.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\nexport default Footer;\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport NewItemTodo from '../NewItemTodo';\r\nimport TodoList from '../TodoList';\r\nimport Footer from '../Footer';\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    arrayTodo: JSON.parse(localStorage.getItem('todo')) || [],\r\n    filter: localStorage.getItem('filter') || 'all',\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.saveToStorage();\r\n  }\r\n\r\n  handleAddElement = (obj) => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: [...arrayTodo, obj],\r\n    });\r\n  };\r\n\r\n\r\n  handleEditElement = (id, text) => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: arrayTodo.map(el => (el.id === id ? { ...el, text } : el)),\r\n    });\r\n  };\r\n\r\n  handleRemoveElement = (id) => {\r\n    const { arrayTodo } = this.state;\r\n    const removeIndex = arrayTodo.findIndex(el => el.id === id);\r\n    this.setState({\r\n      arrayTodo: [\r\n        ...arrayTodo.slice(0, removeIndex),\r\n        ...arrayTodo.slice(removeIndex + 1),\r\n      ],\r\n    });\r\n  };\r\n\r\n  handleToggleElement = (id, isComplete) => {\r\n    const { arrayTodo } = this.state;\r\n    const changeIndex = arrayTodo.findIndex(el => el.id === id);\r\n    const updatedObj = Object.assign({}, arrayTodo[changeIndex], { isComplete: !isComplete });\r\n    this.setState({\r\n      arrayTodo: [\r\n        ...arrayTodo.slice(0, changeIndex),\r\n        updatedObj,\r\n        ...arrayTodo.slice(changeIndex + 1),\r\n      ],\r\n    });\r\n  };\r\n\r\n  saveToStorage = () => {\r\n    const { arrayTodo } = this.state;\r\n    const str = JSON.stringify(arrayTodo);\r\n    localStorage.setItem('todo', str);\r\n  };\r\n\r\n  handleChangeFilter = (filterName) => {\r\n    this.setState({ filter: filterName });\r\n    localStorage.setItem('filter', filterName);\r\n  };\r\n\r\n  getFilter = (filterName) => {\r\n    const { arrayTodo } = this.state;\r\n    switch (filterName) {\r\n      case 'all':\r\n        return arrayTodo;\r\n      case 'completed':\r\n        return arrayTodo.filter(item => item.isComplete);\r\n      case 'active':\r\n        return arrayTodo.filter(item => !item.isComplete);\r\n      default:\r\n        return arrayTodo;\r\n    }\r\n  };\r\n\r\n  handleClearCompletedClick = () => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: arrayTodo.filter(item => !item.isComplete),\r\n    });\r\n  };\r\n\r\n  handleToggleAllClick = (e) => {\r\n    const { arrayTodo } = this.state;\r\n    this.setState({\r\n      arrayTodo: arrayTodo.map(el => ({\r\n        ...el,\r\n        isComplete: e.target.checked,\r\n      })),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { arrayTodo, filter } = this.state;\r\n    const total = arrayTodo.length;\r\n    const active = arrayTodo.filter(item => !item.isComplete).length;\r\n    const completed = arrayTodo.filter(item => item.isComplete).length;\r\n    const filterItems = this.getFilter(filter);\r\n    return (\r\n      <div>\r\n        <input\r\n          onClick={this.handleToggleAllClick}\r\n          checked={active === 0}\r\n          type=\"checkbox\"\r\n          id=\"select-all\"\r\n          className=\"select-all\"\r\n        />\r\n        <label\r\n          className=\"label-select-all\"\r\n          hidden={total === 0}\r\n          htmlFor=\"select-all\"\r\n        />\r\n        <NewItemTodo onAdd={this.handleAddElement} />\r\n        <TodoList\r\n          items={filterItems}\r\n          onToggle={this.handleToggleElement}\r\n          onRemove={this.handleRemoveElement}\r\n          onEdit={this.handleEditElement}\r\n        />\r\n        <Footer\r\n          total={total}\r\n          active={active}\r\n          completed={completed}\r\n          selectedFilter={filter}\r\n          onHandleClearCompletedClick={this.handleClearCompletedClick}\r\n          onChangeFilter={this.handleChangeFilter}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}